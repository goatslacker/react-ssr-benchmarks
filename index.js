const assert = require('assert')
const Benchmark = require('benchmark')
const SimpleExample = require('./examples/simple')

const Reacts = {
  12: require('./react/12'),
  13: require('./react/13'),
  14: require('./react/14'),
  15: require('./react/15'),
}

function assertVersions(version) {
  const valid = {
    12: '0.12.2',
    13: '0.13.3',
    14: '0.14.8',
    15: '15.3.0',
  }
  const React = Reacts[version].React

  assert.ok(
    React.version === valid[version],
    `Failed version check for ${version}. Expected ${valid[version]} got ${React.version}`)
}

// Make sure each version is correct
Object.keys(Reacts).forEach(version => assertVersions(version))

module.exports = (config) => {
  const options = Object.assign({
    // Default getComponent and render implementations just run a "Hello World" test
    getComponent: SimpleExample.getComponent,
    render: SimpleExample.render,
    // Array of custom tests to add to the suite to benchmark vs React
    tests: [],
    // What versions we run benchmarks on
    versions: {
      12: true,
      13: true,
      14: true,
      15: true,
    },
  }, config)

  const suite = new Benchmark.Suite()

  // Enable each react version
  Object.keys(options.versions).forEach((version) => {
    const React = Reacts[version].React
    const ReactDOMServer = Reacts[version].ReactDOMServer
    const Component = options.getComponent(React)

    suite.add(version, function () {
      options.render(Component, React, ReactDOMServer)
    })
  })

  // Add your own tests
  // It'll use the React version you pass in through options as React and ReactDOMServer
  // and it'll get the component just like the other tests to ensure it uses the same component
  options.tests.forEach((test) => {
    const React = test.React
    const ReactDOMServer = test.ReactDOMServer
    const Component = options.getComponent(React)

    suite.add(test.name, function () {
      options.render(Component, React, ReactDOMServer)
    })
  })

  // Prior to starting the test run it'll output the markup to console
  // so you can verify the markup
  const React = React: Reacts['15'].React
  const ReactDOMServer = Reacts['15'].ReactDOMServer
  const Component = options.getComponent(React)
  console.log(`Markup generated by React v${React.version}:`)
  console.log('`')
  console.log(options.render(Component, React, ReactDOMServer))
  console.log('`')
  console.log()
  console.log('Benchmark Results:')

  // Run
  suite.on('cycle', function (event) {
    console.log(String(event.target))
  }).on('complete', function () {
    console.log()
    console.log(`Fastest is ${this.filter('fastest').map('name')}`)
  }).run()
}
